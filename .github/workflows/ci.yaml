name: CI

on: [push, pull_request]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2

    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-18.04-gcc-9
          - ubuntu-18.04-gcc-9-x86
          - ubuntu-18.04-clang-9
          - windows-2019-cl
        include:
          - name: ubuntu-18.04-gcc-9
            os: ubuntu-18.04
            compiler: gcc
            version: "9"
            configuration: Debug

          - name: ubuntu-18.04-gcc-9-x86
            os: ubuntu-18.04
            compiler: gcc
            version: "9"
            cmake-args: -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain-linux32.cmake

          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"
            configuration: Debug

          - name: windows-2019-cl
            os: windows-2019
            cmake-args: -A x64
            configuration: Debug

    steps:
      - uses: actions/checkout@v2

      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "::add-path::/home/runner/.local/bin"
          python3 -m pip install pip --upgrade
          python3 -m pip install cmake==3.14.4 --upgrade

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi

      - name: Install (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install cmake==3.14.4 --upgrade

      - name: Build and test
        run: |
          cmake --version
          cmake -S . -B build ${{ matrix.cmake-args }}
          cmake --build build --config ${{ matrix.configuration }}
          (cd build && ctest -C ${{ matrix.configuration }} )
